function varargout = Negasi(varargin)
% NEGASI M-file for Negasi.fig
%      NEGASI, by itself, creates a new NEGASI or raises the existing
%      singleton*.
%
%      H = NEGASI returns the handle to a new NEGASI or the handle to
%      the existing singleton*.
%
%      NEGASI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in NEGASI.M with the given input arguments.
%
%      NEGASI('Property','Value',...) creates a new NEGASI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Negasi_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Negasi_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help Negasi

% Last Modified by GUIDE v2.5 26-Oct-2016 19:50:38

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Negasi_OpeningFcn, ...
                   'gui_OutputFcn',  @Negasi_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before Negasi is made visible.
function Negasi_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Negasi (see VARARGIN)

% Choose default command line output for Negasi
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Negasi wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = Negasi_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
open=guidata(gcbo); 
[namafile,direktori]=uigetfile({'*.jpg;*.png;*.bmp;*.tif'}, 'OpenImage'); 
I=imread(namafile); 
set(open.figure1,'CurrentAxes',open.axes1); 
set(imagesc(I));colormap('gray');
set(open.axes1,'Userdata',I); 
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
open=guidata(gcbo); 
[namafile,direktori]=uigetfile({'*.jpg;*.png;*.bmp;*.tif'}, 'OpenImage'); 
I=imread(namafile); 
set(open.figure1,'CurrentAxes',open.axes2); 
set(imagesc(I));colormap('gray'); 
set(open.axes2,'Userdata',I); 
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
open=guidata(gcbo); 
I=get(open.axes1,'Userdata'); 
[r c] = size(I); 
for x = 1 : r 
for y = 1 : c 
J(x,y) = 255 - I(x,y); 
end
end
set(open.figure1,'CurrentAxes',open.axes3); 
set(imagesc(J));colormap('gray'); 
set(open.axes3,'Userdata',J); 
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
open = guidata(gcbo);
%A = not(imread('logika1.bmp')); 
%B = not(imread('logika2.bmp')); 
A = get(open.axes1,'Userdata');
B = get(open.axes2,'Userdata');
%A = not(Ax);
%B = not(Bx);
[r1 c1] = size(A); 
[r2 c2] = size(B); 
for x = 1 : r1 
    for y = 1 : c1 
        C(x,y) = and(A(x,y),B(x,y)); 
    end
end
C = clipping(C);
set(open.figure1,'CurrentAxes',open.axes3); 
set(imagesc(C));colormap('gray'); 
set(open.axes3,'Userdata',C);
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton8.
function pushbutton8_Callback(hObject, eventdata, handles)
A = double(imread('cameraman.tif')); 
B = double(imread('rice.png'));  
[r1 c1]   = size(A); 
[r2 c2] = size(B); 
if (r1 == r2) && (c1 == c2) 
    for x = 1 : r1 
        for y = 1 : c1 
            C(x,y) = A(x,y) + B(x,y); 
        end 
 end 
end 
C = clipping(C); 
set(open.figure1,'CurrentAxes',open.axes3); 
set(imagesc(C));colormap('gray'); 
set(open.axes3,'Userdata',C);
% hObject    handle to pushbutton8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton10.
function pushbutton10_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton11.
function pushbutton11_Callback(hObject, eventdata, handles)
open = guidata(gcbo);

% %A = not(imread('logika1.bmp')); 
% %B = not(imread('logika2.bmp')); 
% s = get(open.axes1,'Userdata');
% d = get(open.axes2,'Userdata');
% A = not(s);
% B = not(d);
% [r1 c1] = size(A); 
% [r2 c2] = size(B); 
% for x = 1 : r1 
% for y = 1 : c1 
% C(x,y) = and(A(x,y),B(x,y)); 
% end 
% end 
A  =  not(imread('logika1.bmp')); 
B  =  not(imread('logika2.bmp')); 
[r1 c1] = size(A); 
[r2 c2] = size(B); 
for x = 1 : r1 
for y = 1 : c1 
C(x,y) = And(A(x,y),B(x,y)); 
end 
end 
set(open.figure1,'CurrentAxes',open.axes3); 
set(imagesc(C));colormap('gray'); 
set(open.axes3,'Userdata',C);
% hObject    handle to pushbutton11 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


